015 나머지가 1이 되는 수  찾기

https://school.programmers.co.kr/learn/courses/30/lessons/87389

자연수 n이 매개변수로 주어집니다.
 n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요.
 답이 항상 존재함은 증명될 수 있습니다.

제한사항
3 ≤ n ≤ 1,000,000

답
class Solution {
    public int solution (int n) {
        for (int x = 2; x < n; x ++)  {  //x는 2부터 시작 (1은 무조건 나머지가 0이므로 제외)
            if (n % x == 1) { // 나머지가 1이 되는 가장 작은 x 찾기
                return x;   //가장 작은 x 반환
            }
        }
        return n - 1;  // 예외적으로 실행될 일은 없지만, 안전 장치
    }
}



/*
해설
자연수 n이 주어졌을 때,
n을 어떤 자연수 x로 나눴을 때
 나머지가 1이 되는 가장작은 x 를 찾아야한다

 즉   n % x == 1 을 만족하는 가장 작은 x 를 구하는 문제



반복문 for 활용
x는 2부터 시작   (x == 1 이면  n % 1 == 0 이므로 의미 없음)
x가 n 보다 작을 때까지만 반복
n % x == 1 을 만족하면  즉시 x 를 반환 (가장 작은 값 찾기)

왜 x = 2 부터 시작 할까?
n % 1 은 항상 0이므로 고려할 필요 없음

return n-1;  이 필요한 이유
이 문제는 항상 답이 존재한다고 보장되므로 사실상 필요 없음
하지만 코드 안정성을 위해 마지막에 안전장치로 추가


추가해설
문제이해
숫자 n이 있다 이 숫자를 어떤 숫자 x로 나눴을때,
나머지가 1이 되는 가장 작은 x를 찾아러

예제1
n = 10
10을 나눌 수 있는 숫자를 찾는다고 가정
10 / 2 = 5 -> 나머지 0
10 / 3 = 3 -> 나머지 1    (정답 x=3   나머지1 이므로 정답이다)


x = 2 부터  하나씩 숫자를 늘려가보자
n / x 했을 때 나머지가 1이 되면 바로 멈추고 x를 정답으로 반환
정답 찾으면 끝!


class Solution {
    public int solution(int n) {  // 숫자 n이 주어졌을 때
        for (int x = 2; x < n; x++) {  // x를 2부터 시작해 n-1까지 하나씩 증가시키면서 검사
            if (n % x == 1) {  // n을 x로 나누었을 때 나머지가 1이 되는 경우 찾기
                return x;  // 조건을 만족하는 가장 작은 x를 반환
            }
        }
        return n - 1;  // (이론적으로 실행될 일 없지만) 안전장치로 n-1 반환
    }
}


 */