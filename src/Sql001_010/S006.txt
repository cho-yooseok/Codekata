SQL 006

https://school.programmers.co.kr/learn/courses/30/lessons/59041

문제
ANIMAL_INS 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다.
ANIMAL_INS 테이블 구조는 다음과 같으며, ANIMAL_ID, ANIMAL_TYPE, DATETIME, INTAKE_CONDITION, NAME, SEX_UPON_INTAKE는
각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.

NAME	TYPE	NULLABLE
ANIMAL_ID	VARCHAR(N)	FALSE
ANIMAL_TYPE	VARCHAR(N)	FALSE
DATETIME	DATETIME	FALSE
INTAKE_CONDITION	VARCHAR(N)	FALSE
NAME	VARCHAR(N)	TRUE
SEX_UPON_INTAKE	VARCHAR(N)	FALSE
동물 보호소에 들어온 동물 이름 중 두 번 이상 쓰인 이름과 해당 이름이 쓰인 횟수를 조회하는 SQL문을 작성해주세요.
이때 결과는 이름이 없는 동물은 집계에서 제외하며, 결과는 이름 순으로 조회해주세요.

예시
예를 들어 ANIMAL_INS 테이블이 다음과 같다면

ANIMAL_ID	ANIMAL_TYPE	DATETIME	INTAKE_CONDITION	NAME	SEX_UPON_INTAKE
A396810	Dog	2016-08-22 16:13:00	Injured	Raven	Spayed Female
A377750	Dog	2017-10-25 17:17:00	Normal	Lucy	Spayed Female
A355688	Dog	2014-01-26 13:48:00	Normal	Shadow	Neutered Male
A399421	Dog	2015-08-25 14:08:00	Normal	Lucy	Spayed Female
A400680	Dog	2017-06-17 13:29:00	Normal	Lucy	Spayed Female
A410668	Cat	2015-11-19 13:41:00	Normal	Raven	Spayed Female
Raven 이름은 2번 쓰였습니다.
Lucy 이름은 3번 쓰였습니다
Shadow 이름은 1번 쓰였습니다.
따라서 SQL문을 실행하면 다음과 같이 나와야 합니다.

NAME	COUNT
Lucy	3
Raven	2


문제 요약
ANIMAL_INS 테이블에서 동물의 이름 NAME 이 두 번 이상 쓰인 이름과 해당 이름이 쓰인 횟수를 조회하는
SQL 쿼리를 작성하시오
단, 이름이 없는 동물 NULL 은 제외 하고
결과는 이름 순으로 정렬하시오

답
SELECT NAME, COUNT(NAME) AS COUNT
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
GROUP BY NAME
HAVING COUNT(NAME) >=2
ORDER BY NAME ASC;


/*
해설
SELECT NAME, COUNT(NAME) AS COUNT
NAME 열과    해당 이름이 쓰인 횟수 COUNT(NAME)   를 선택합니다
COUNT(NAME)는 NAME 열의 값이 NULL이 아닌 행의 개수를 세어 반환합니다
AS COUNT 는 결과   열의 이름을 COUNT 로 지정합니다

FROM ANIMAL_INS
ANIMAL_INS 테이블에서 데이터를 가져옵니다

WHERE NAME IS NOT NULL
NAME 열의 값이 NULL이 아닌 행만 필터링합니다
이름이 없는 동물은 제외됩니다

GROUP BY NAME
NAME 열을 기준으로 그룹화 합니다
같은 이름을 가진 행끼리 묶어 집계합니다

HAVING COUNT(NAME) >= 2
그룹화된 결과에서 COUNT(NAME) 가 2 이상인 그룹만 선택합니다
즉 두 번 이상 쓰인 이름만 필터링 합니다

ORDER BY NAME ASC
결과를 NAME을 기준으로 오름차순 정렬합니다 ASC 생략 가능합니다


GOUP BY
특정 열을 기준으로 그룹화하여
집계합수 COUNT SUM AVG 등을  적용합니다
여기서는 NAME 을 기준으로 그룹화했습니다

HAVING
GROUP BY 로 그룹화된 결과에 조건을 적용합니다
WHERE는 그룹화 전에 필터링하고, HAVING은 그룹화 후에 필터링합니다

COUNT(NAME)
NAME 열의 값이 NULL이 아닌 행의 개수를 세어 반환합니다

ORDER BY
결과를 특정 열을 기준으로 정렬합니다
여기서는 NAME을 기준으로 오름차순 정렬했습니다
*/